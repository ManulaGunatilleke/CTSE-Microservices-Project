name: Continuous Deployment

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine environment and namespace
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ENVIRONMENT="${{ github.event.inputs.environment }}"
          elif [[ "${GITHUB_REF}}" == "refs/heads/main" ]]; then
            ENVIRONMENT="production"
          else
            ENVIRONMENT="development"
          fi
          NAMESPACE="default"
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "namespace=$NAMESPACE" >> $GITHUB_OUTPUT

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create kubeconfig file
        run: |
          if [[ "${{ steps.env.outputs.environment }}" == "production" ]]; then
            echo -n "${{ secrets.PROD_KUBE_CONFIG }}" | base64 --decode > ${{ github.workspace }}/kubeconfig
          else
            echo -n "${{ secrets.DEV_KUBE_CONFIG }}" | base64 --decode > ${{ github.workspace }}/kubeconfig
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch images
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/learning-platform:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/learning-platform:${{ github.ref_name }}
          build-args: |
            NPM_CONFIG_OPTIONAL=false

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Generate values-runtime.yaml
        run: |
          cat > values-runtime.yaml << EOF
          namespace: default
          common:
            registry: ${{ secrets.DOCKERHUB_USERNAME }}
            imagePullPolicy: Always
            environment: ${{ steps.env.outputs.environment }}
          services:
            client:
              tag: ${{ github.sha }}
              enabled: true
              secrets:
                enabled: true
                data:
                  REACT_APP_BACKEND_URL: "${{ secrets.REACT_APP_BACKEND_URL }}"
                  ...
            apiGateway:
              tag: ${{ github.sha }}
              ...
            userManagement:
              tag: ${{ github.sha }}
              ...
            courseManagement:
              tag: ${{ github.sha }}
              ...
            paymentManagement:
              tag: ${{ github.sha }}
              ...
            enrollmentManagement:
              tag: ${{ github.sha }}
              ...
          EOF

      - name: Deploy to Kubernetes using Helm
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          cd learning-platform
          helm upgrade --install learning-platform . \
            --namespace default \
            --values values.yaml \
            --values ../values-runtime.yaml

      - name: Verify deployment
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl get pods -n default
          kubectl get services -n default
