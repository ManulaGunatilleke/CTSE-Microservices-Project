name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          {name: 'client', dir: './client'}, 
          {name: 'api-gateway', dir: './api-gateway'},
          {name: 'user-management', dir: './UserManagementService'},
          {name: 'course-management', dir: './CourseManagementService'},
          {name: 'payment-management', dir: './PaymentManagementService'},
          {name: 'enrollment-management', dir: './EnrollmentManagementService'}
        ]
        
    steps:
    - uses: actions/checkout@v3
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.service.dir }}/package-lock.json
        
    - name: Install dependencies
      working-directory: ${{ matrix.service.dir }}
      run: npm ci
        
    - name: Run linting
      working-directory: ${{ matrix.service.dir }}
      run: npm run lint || echo "No linting configured"
        
    - name: Run tests
      working-directory: ${{ matrix.service.dir }}
      run: npm test || echo "No tests configured"

  build:
    needs: test
    runs-on: ubuntu-latest
    environment: Docker
    strategy:
      matrix:
        service: [
          {name: 'client', dir: './client'}, 
          {name: 'api-gateway', dir: './api-gateway'},
          {name: 'user-management', dir: './UserManagementService'},
          {name: 'course-management', dir: './CourseManagementService'},
          {name: 'payment-management', dir: './PaymentManagementService'},
          {name: 'enrollment-management', dir: './EnrollmentManagementService'}
        ]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up QEMU for ARM64 support
      uses: docker/setup-qemu-action@v2
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: |
          image=moby/buildkit:master
        install: true
        
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push multi-arch images
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.service.dir }}
        platforms: ${{ contains(matrix.service.name, 'user-management') && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:${{ github.sha }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NPM_CONFIG_OPTIONAL=false
